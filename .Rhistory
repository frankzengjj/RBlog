getwd()
library(MASS)
library(ISLR)
install.packages('ISLR')
get()
getwd()
read.csv('boston')
library(MASS)
attach(Boston)
boston
Boston
bs = Boston
simple.reg <- vector("numeric",0)
simple.reg <- c(simple.reg, fit.zn$coefficient[2])
simple.reg <- c(simple.reg, fit.indus$coefficient[2])
simple.reg <- c(simple.reg, fit.chas$coefficient[2])
simple.reg <- c(simple.reg, fit.nox$coefficient[2])
simple.reg <- c(simple.reg, fit.rm$coefficient[2])
simple.reg <- c(simple.reg, fit.age$coefficient[2])
simple.reg <- c(simple.reg, fit.dis$coefficient[2])
simple.reg <- c(simple.reg, fit.rad$coefficient[2])
simple.reg <- c(simple.reg, fit.tax$coefficient[2])
simple.reg <- c(simple.reg, fit.ptratio$coefficient[2])
simple.reg <- c(simple.reg, fit.black$coefficient[2])
simple.reg <- c(simple.reg, fit.lstat$coefficient[2])
simple.reg <- c(simple.reg, fit.medv$coefficient[2])
mult.reg <- vector("numeric", 0)
mult.reg <- c(mult.reg, fit.all$coefficients)
mult.reg <- mult.reg[-1]
plot(simple.reg, mult.reg, col = "red")
?poly
simple.reg
?simple.reg
??simple.reg
?poly
fit.zn2 <- lm(crim ~ poly(zn, 3))
summary(fit.zn2)
simple.reg <- vector("numeric",0)
simple.reg <- c(simple.reg, fit.zn$coefficient[2])
fit.medv <- lm(crim ~ medv)
simple.reg <- c(simple.reg, fit.medv$coefficient[2])
install.packages("ISLR")
system('defaults write org.R-project.R force.LANG en_US.UTF-8')
getwd()
getwd()
library(rvest)
library(dplyr)
con_link = "https://en.wikipedia.org/wiki/List_of_United_States_counties_and_county_equivalents"
county_pg = read_html(con_link)
tb = county_pg %>% html_nodes(xpath = '//*[@id="mw-content-text"]/div/table[2]') %>% .[[1]] %>% html_table()
counties = tb[,1:4]
counties = counties %>% as_tibble()
##########################################################
lines = readLines(con_link) # thousands of lines of HTML
pop = grep(pattern = "text-align:right", x = lines)
county.lines = lines[pop-2]
county.lines = gsub("^.*(/wiki/)", "", county.lines)
county.lines = gsub("[[:space:]]", replacement = "", x = county.lines)
county.lines = gsub("\\\".*$", replacement = "", x = county.lines)
county.urls = paste("/wiki/", county.lines, sep="")
county.sites = paste("https://en.wikipedia.org", county.urls, sep="")
county.sites = county.sites %>% as.array()
#county.sites = county.sites %>% as_tibble()
library(stringr)
scrapeLinks = function(url){
# given a line of cnty, it extracts the url for a wiki page of a county
# stolen from http://stackoverflow.com/questions/3746256/extract-links-from-webpage-using-r
#url = paste("https://en.wikipedia.org/wiki/",
#sub(" ", "_", x[1]),",_", sub(" ", "_", x[2]), sep="")  # the page url's are nicely structured!
lines = try(readLines(url), silent = T)
if(length(lines) ==0) return(c())
html <- paste(lines, collapse="\n")
matched <- str_match_all(html, "<a href=\"(.*?)\"")
links <- matched[[1]][, 2]
return(links)
}
county.sites
?apply
# you need to define allCountyNames to have rows like x
# then, this next line will take a bit of time....
a = apply(county.sites, 1, scrapeLinks)
rm(list = ls())
load("/Users/user/Desktop/stat/stat479_ds/project/wikiCountyGraph.RData")
library(rvest)
library(dplyr)
con_link = "https://en.wikipedia.org/wiki/List_of_United_States_counties_and_county_equivalents"
county_pg = read_html(con_link)
tb = county_pg %>% html_nodes(xpath = '//*[@id="mw-content-text"]/div/table[2]') %>% .[[1]] %>% html_table()
counties = tb[,1:4]
counties = counties %>% as_tibble()
##########################################################
lines = readLines(con_link) # thousands of lines of HTML
pop = grep(pattern = "text-align:right", x = lines)
county.lines = lines[pop-2]
county.lines = gsub("^.*(/wiki/)", "", county.lines)
county.lines = gsub("[[:space:]]", replacement = "", x = county.lines)
county.lines = gsub("\\\".*$", replacement = "", x = county.lines)
county.urls = paste("/wiki/", county.lines, sep="")
county.sites = paste("https://en.wikipedia.org", county.urls, sep="")
county.sites = county.sites %>% as.array()
A
colnames(A) = levels(fj)
j =(unlist(a))
fj = factor(j)
p = c(0,cumsum(unlist(lapply(a, length))))
library(Matrix)
?sparseMatrix
sparseMatrix(x = A)
i <- c(1,3:8); j <- c(2,9,6:10);
i
sparseMatrix(i, j, x = A)
library(reshape2)
library(ggplot2)
ggplot(melt(A), aes(Var1,Var2, fill=value)) +
geom_raster() +
scale_fill_gradient2(low='red', high='black', mid='white') +
theme_bw() +
xlab("x1") + ylab("x2")
set.seed(7)
m <- matrix(0, 100, 100)
n <- 1000
m[sample(length(m), size = n)] <- rep(-1:1, length=n)
m
image(A)
?image
A
dim(A)
options(width = 99999)
show()
show(A)
library(rARPACK)
Dl = Diagonal(nrow(A), 1/sqrt(rowSums(A)+10)); Dr = Diagonal(ncol(A), 1/sqrt(colSums(A)+10))
L = Dl%*%A%*%Dr
s = svds(L, k = 10)
plot(s$d[-1])
u = s$u
plot(as.data.frame(u[sample(nrow(A),1000),]), pch = ".")
county.lines[which(s$u[,4]< -.001)]
colnames(A)[which(s$v[,2]> .1)]
county.lines[which(s$u[,11]< -.001)]
county.lines[which(s$u[,10]< -.001)]
library(twitteR)
library(tidyverse)
# Calling the Twitter API
consumer_key <- "z0f8WnP1dGcAogS2o7GKyp2Ui"
consumer_secret <- "pzeAdwLUkrXZvZx41ex2iSrDqMyXgCI7CIqMDPCyNrucG1wqto"
access_token <- "961467148882382849-ZxNXYtgTsDWlixwhqKIVaHDh2LUkMd6"
access_secret <- "gCXGDndWDuCGSTfLaq8TrhnWzfrUlyyCkoNxzSG3xwSRK"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
searchTwitter('Redstone Federal Credit Union', since = '2017-01-01')
searchTwitteR('Redstone Federal Credit Union', since = '2017-01-01')
searchTwitteR('Redstone Federal Credit Union',n=100 ,since = '2017-01-01')
searchTwitteR('Five Star Credit Union',n=100 ,since = '2017-01-01')
searchTwitteR('Community First Credit Union of Florida',n=100 ,since = '2017-01-01')
searchTwitteR('Johns Hopkins Federal Credit Union',n=100 ,since = '2017-01-01')
searchTwitteR('Johns+Hopkins+Federal+Credit+Union',n=100 ,since = '2017-01-01')
searchTwitteR('Trump',n=100 ,since = '2017-01-01')
rm(list = ls())
library(twitteR)
library(tidyverse)
consumer_key <- "z0f8WnP1dGcAogS2o7GKyp2Ui"
consumer_secret <- "pzeAdwLUkrXZvZx41ex2iSrDqMyXgCI7CIqMDPCyNrucG1wqto"
access_token <- "961467148882382849-ZxNXYtgTsDWlixwhqKIVaHDh2LUkMd6"
access_secret <- "gCXGDndWDuCGSTfLaq8TrhnWzfrUlyyCkoNxzSG3xwSRK"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
library(readxl)
CU_segment_sentiment_data_Frank_csv <- read_excel("Desktop/cuna/twitter/CU_segment_sentiment_data_Frank.csv.xlsx")
View(CU_segment_sentiment_data_Frank_csv)
CU_segment_sentiment_data_Frank_csv$legal_name
name <- CU_segment_sentiment_data_Frank_csv$legal_name
searchTwitteR('Utah Power Credit Union',n=100 ,since = '2017-01-01')
searchTwitteR('Matanuska Valley Federal Credit Union',n=100 ,since = '2017-01-01')
searchTwitteR('Spokane Teachers Credit Union',n=100 ,since = '2017-01-01')
searchTwitteR('Matanuska Valley Federal Credit Union',n=100 ,since = '2017-01-01') %>% unlist()
tw <- searchTwitteR('Matanuska Valley Federal Credit Union',n=100 ,since = '2017-01-01')
unlist(tw)
unlist()
?unlist
typeof(tw)
toDataFrame(tw)
tw
tw[1]
tw[[1]]
unlist(tw)
as.vector(unlist(tw))
as.data.frame(unlist(tw))
tw <- searchTwitteR('Matanuska Valley Federal Credit Union',n=100 ,since = '2016-01-01')
tw
tw <- searchTwitteR('Matanuska+Valley+Federal+Credit+Union',n=100 ,since = '2016-01-01')
tw
unlist(tw,recursive = FALSE)
do.call(c, unlist(tw, recursive=FALSE))
tw[1]
tw[2]
tw[[1]]
tw[[2]]
tw[[3]]
flatten(tw)
flatten_chr(tw)
rm(list = ls())
data("USairpollution")
data("USairpollution", package = "HSAUR3")
install.packages("HSAUR3")
data("USairpollution", package = "HSAUR3")
USairpollution
library('MVA')
install.packages('MVA')
library(MVA)
airpoll <- USairpollution
par(mfrow=c(1,2),cex.main=1.5,cex.lab=1,cex.axis=1,pty="s")
x <- airpoll[,c("manu","popul")]
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Nonrobust",xlab=mlab,ylab=plab,method="nonrobust")
bvbox(x,main="Nonrobust",method="nonrobust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
bvbox(x,main="Robust",xlab=mlab,ylab=plab,method="robust")
bvbox(x,main="Robust",method="robust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
airpoll
par(mfrow=c(3,3),cex.main=1.5,cex.lab=1,cex.axis=1,pty="s")
x <- airpoll
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Nonrobust",method="nonrobust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
bvbox(x,main="Robust",method="robust")
mlab <- "Manufacturing enterprises with 20 or more workers"
plab <- "Population size (1970 census) in thousands"
par(mfrow=c(1,2),cex.main=1.5,cex.lab=1,cex.axis=1,pty="s")
x <- airpoll[,c("manu","popul")]
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Nonrobust",xlab=mlab,ylab=plab,method="nonrobust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
bvbox(x,main="Robust",xlab=mlab,ylab=plab,method="robust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
par(mfrow=c(1,2),cex.main=1.5,cex.lab=1,cex.axis=1,pty="s")
x <- airpoll[,c("SO2","temp")]
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Robust",xlab=mlab,ylab=plab,method="robust")
par(mfrow=c(1,2),cex.main=1.5,cex.lab=1,cex.axis=1,pty="s")
x <- airpoll
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Robust",xlab=mlab,ylab=plab,method="robust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
library(MVA)
par(mfrow=c(3,3),cex.main=1.5,cex.lab=1,cex.axis=1,pty="s")
x <- airpoll
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Robust",xlab=mlab,ylab=plab,method="robust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
pairs(USairpollution, pch = ".", cex = 1.5)
pairs(bvbox(USairpollution,main="Nonrobust",method="nonrobust"), cex = 1.5)
pairs(USairpollution,bvbox(main="Nonrobust",method="nonrobust"), cex = 1.5)
pairs(USairpollution,ellipses=TRUE  , cex = 1.5)
pairs(USairpollution,ellipses=TRUE,pcr='.',cex = 1.5)
pairs(USairpollution,ellipses=TRUE,pch='.',cex = 1.5)
pairs(USairpollution,pch='.',cex = 1.5)
pairs(USairpollution, ellipses=TRUE)
par(mfrow=c(1,2),cex.main=1.5,cex.lab=1,cex.axis=1,pty="s")
x <- airpoll[,c("manu","popul")]
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Nonrobust",xlab="manu",ylab="popul",method="nonrobust")
x <- airpoll[,c("manu","wind")]
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Nonrobust",xlab="manu",ylab="wind",method="nonrobust")
x <- airpoll[,c("temp","SO2")]
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Nonrobust",xlab="manu",ylab="popul",method="nonrobust")
x <- airpoll[,c("manu","SO2")]
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Nonrobust",xlab="manu",ylab="wind",method="nonrobust")
outliers
data("USairpollution", package = "MVA")
library(tidyverse)
airpoll %>% as_tibble()
rownames(airpoll)[1] <- "City"
airpoll
airpoll <- USairpollution
colnames(airpoll)[1] <- "City"
airpoll
airpoll <- USairpollution
setNames(cbind(rownames(airpoll), airpoll, row.names = NULL),
c("City","SO2", "temp", "manu", "popul", "wind", "precip", "predays"))
airpoll
airpoll <- setNames(cbind(rownames(airpoll), airpoll, row.names = NULL),
c("City","SO2", "temp", "manu", "popul", "wind", "precip", "predays"))
airpoll
x <- airpoll[,c("temp","SO2")]
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Nonrobust",xlab="manu",ylab="popul",method="nonrobust")
outliers
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("manu","popul")]
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
bvbox(x,main="Nonrobust",xlab=mlab,ylab=plab,method="nonrobust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("temp","popul")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="temp vs popul",xlab=mlab,ylab=plab,method="nonrobust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
outliers
x <- airpoll[,c("temp","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs tep",xlab=mlab,ylab=plab,method="nonrobust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
outliers
par(mfrow=c(1,2))
lab <- c("Chicago","Detroit","Cleveland","Philadelphia")
outliers <- match(lab,airpoll$City)
x <- airpoll[,c("temp","SO2")]
bvbox(x,main="SO2 vs temp",xlab=mlab,ylab=plab,method="robust")
x <- airpoll[,c("temp","SO2")]
bvbox(x,main="SO2 vs temp",xlab="temp",ylab="SO2",method="robust")
text(x$manu[outliers],x$popul[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("temp","SO2")]
bvbox(x,main="SO2 vs temp",xlab="temp",ylab="SO2",method="robust")
text(x$temp[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("manu","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Manu",xlab="manu",ylab="SO2",method="robust")
text(x$manu[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
airpoll %>% filter(SO2 > 80)
USairpollution
lab <- c("Chicago","Detroit","Cleveland","Philadelphia", "Providence")
outliers <- match(lab,airpoll$City)
x <- airpoll[,c("temp","SO2")]
bvbox(x,main="SO2 vs temp",xlab="temp",ylab="SO2",method="robust")
text(x$temp[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("manu","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Manu",xlab="manu",ylab="SO2",method="robust")
text(x$manu[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
par(mfrow=c(1,7))
lab <- c("Chicago","Detroit","Cleveland","Philadelphia", "Providence")
outliers <- match(lab,airpoll$City)
x <- airpoll[,c("temp","SO2")]
bvbox(x,main="SO2 vs temp",xlab="temp",ylab="SO2",method="robust")
text(x$temp[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("manu","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Manu",xlab="manu",ylab="SO2",method="robust")
text(x$manu[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("popul","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Popul",xlab="popul",ylab="SO2",method="robust")
text(x$popul[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("wind","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Wind",xlab="wind",ylab="SO2",method="robust")
text(x$wind[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("precip","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Precip",xlab="Precip",ylab="SO2",method="robust")
text(x$precip[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("predays","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Predays",xlab="predays",ylab="SO2",method="robust")
text(x$predays[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
par(mfrow=c(3,3))
lab <- c("Chicago","Detroit","Cleveland","Philadelphia", "Providence")
outliers <- match(lab,airpoll$City)
x <- airpoll[,c("temp","SO2")]
bvbox(x,main="SO2 vs temp",xlab="temp",ylab="SO2",method="robust")
text(x$temp[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("manu","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Manu",xlab="manu",ylab="SO2",method="robust")
text(x$manu[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("popul","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Popul",xlab="popul",ylab="SO2",method="robust")
text(x$popul[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("wind","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Wind",xlab="wind",ylab="SO2",method="robust")
text(x$wind[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("precip","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Precip",xlab="Precip",ylab="SO2",method="robust")
text(x$precip[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
x <- airpoll[,c("predays","SO2")]
outliers <- match(lab,airpoll$City)
bvbox(x,main="SO2 vs Predays",xlab="predays",ylab="SO2",method="robust")
text(x$predays[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
airpoll[,2:]
colnames(airpoll)[,-1]
colnames(airpoll)
for (variable in colnames(airpoll)[1,]) {
}
for (variable in colnames(airpoll)[1]) {
}
colnames(airpoll)[1]
colnames(airpoll)[-1]
for (variable in colnames(airpoll)[-1]) {
x <- airpoll[,c(variable,"SO2")]
bvbox(x,xlab=variable,ylab="SO2",method="robust")
text(x$temp[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
}
for (variable in colnames(airpoll)[-1]) {
x <- airpoll[,c(variable,"SO2")]
bvbox(x,main="plot",xlab=variable,ylab="SO2",method="robust")
text(x$temp[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
}
for (variable in colnames(airpoll)[-1]) {
print(variable)
}
colnames(airpoll)[-1]
col_names <- c("SO2"  ,   "temp"   , "manu"  ,  "popul" ,  "wind"   , "precip"  ,"predays")
col_names
for (variable in col_names[-1]) {
print(variable)
}
for (variable in col_names[-1]) {
x <- airpoll[,c(variable,"SO2")]
bvbox(x,main="SO2 vs temp",xlab="temp",ylab="SO2",method="robust")
text(x$variable[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
}
for (variable in col_names[-1]) {
x <- airpoll[,c(variable,"SO2")]
bvbox(x,main="SO2 vs temp",xlab="temp",ylab="SO2",method="robust")
text(x$variable[outliers],x$SO2[outliers],labels=lab,cex=1,
pos=c(2,2,4,2))
}
for (variable in col_names[-1]) {
x <- airpoll[,c(variable,"SO2")]
bvbox(x,main="SO2 vs temp",xlab="temp",ylab="SO2",method="robust")
}
x$temp[outliers]
setwd("~/Desktop/R-Blog")
blogdown::serve_site()
setwd("~/Desktop/R-Blog")
blogdown::new_site(theme = "road2stat/hugo-tanka")
blogdown::new_site(theme = "chesterhow/tale")
install_theme()
blogdown::install_theme(hostname = "chesterhow/tale",theme_example = TRUE)
blogdown::new_site(theme = "slunsford/arabica")
blogdown::new_site(theme = "https://github.com/slunsford/arabica")
blogdown::new_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown::new_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::new_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
